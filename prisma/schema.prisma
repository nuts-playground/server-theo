generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum RoomState {
  playing
  waiting
  canStart
  full
}

model Player {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  socket    String @unique
  name      String
  location  String

  isReady   Boolean?
  isMaster  Boolean?

  room      Room?    @relation(fields: [roomId], references: [id])
  roomId    String?

}

model Room {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  gameId  String
  game    Game @relation(fields: [gameId], references: [id])
  state   RoomState
  data    Json
  players Player[]
}

model Game {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String    @unique
  minPeople Int
  maxPeople Int
  rooms     Room[]
}

model Chat {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  text      String
  player    String
  date      DateTime @default(now())
}





model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name  String   @unique

  gameRoom    GameRoom?   @relation(fields: [gameRoomId], references: [id])
  gameRoomId  String?        
}

model GameType {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String    @unique
  minUsers    Int      
  maxUsers    Int      

  gameRooms   GameRoom[]  @relation("GameTypeRooms")
}

model GameRoom {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  users       User[]   

  gameTypeId  String       
  gameType    GameType   @relation("GameTypeRooms", fields: [gameTypeId], references: [id])
}